//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ANT.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class allResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal allResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ANT.Resources.allResources", typeof(allResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @ECHO OFF
        ///Echo. Please wait while we initialize every thing.... 
        ///cd\ C:\ant\init
        ///python init.py.
        /// </summary>
        public static string _00_init {
            get {
                return ResourceManager.GetString("_00_init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///import warnings
        ///warnings.filterwarnings(&apos;ignore&apos;)
        ///
        ///# -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///        Created on Tue Apr 04 05:14:23 2017
        ///        LASSO 
        ///        @author: Mahmoud M. Abderlrahman
        ///        varialbles : 
        ///        ##workingDir##
        ///        ##logFile##
        ///        ##resFile##
        ///        ##dataFile##
        ///        ##targetFile##
        ///        ##predictData##
        ///        support = clf.support_
        ///        supportVector = clf.support_vectors_
        ///        nSupport = clf.n_support_
        ///        dualCoef = clf.dual_coef_
        ///&quot;&quot;&quot;
        ///
        ///workingD [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _03_BayesianRegression {
            get {
                return ResourceManager.GetString("_03_BayesianRegression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_Bays_ {
            get {
                object obj = ResourceManager.GetObject("_03_Bays_", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///LASSO 
        ///@author: Mahmoud M. Abderlrahman
        ///varialbles : 
        ///##workingDir##
        ///##logFile##
        ///##resFile##
        ///##dataFile##
        ///##targetFile##
        ///##predictData##	
        ///&quot;&quot;&quot;
        ///workingDir = &quot;##workingDir##&quot;
        ///logFile = &quot;##logFile##&quot;
        ///resFile = workingDir+&quot;##resFile##&quot;
        ///
        ///
        ///xmlFile = workingDir+&quot;res.xml&quot;
        ///isDump = True
        ///
        ///log_file =open(logFile, &apos;w&apos;) 
        ///
        ///try:
        ///    from sklearn.linear_model import ElasticNet
        ///    import pickle
        ///    import xml.etree.cElementTree as ET
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _03_ElasticNet {
            get {
                return ResourceManager.GetString("_03_ElasticNet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_ElasticNet1 {
            get {
                object obj = ResourceManager.GetObject("_03_ElasticNet1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_Bayes {
            get {
                object obj = ResourceManager.GetObject("_03_icon_Bayes", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_lars {
            get {
                object obj = ResourceManager.GetObject("_03_icon_lars", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_LarsLasso {
            get {
                object obj = ResourceManager.GetObject("_03_icon_LarsLasso", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_lasso {
            get {
                object obj = ResourceManager.GetObject("_03_icon_lasso", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_LogisticRegression {
            get {
                object obj = ResourceManager.GetObject("_03_icon_LogisticRegression", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_orthogonalMatchingPursuit {
            get {
                object obj = ResourceManager.GetObject("_03_icon_orthogonalMatchingPursuit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_StochasticGradientDescentC {
            get {
                object obj = ResourceManager.GetObject("_03_icon_StochasticGradientDescentC", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_StochasticGradientDescentC1 {
            get {
                object obj = ResourceManager.GetObject("_03_icon_StochasticGradientDescentC1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_icon_StochasticGradientDescentR {
            get {
                object obj = ResourceManager.GetObject("_03_icon_StochasticGradientDescentR", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_LARS {
            get {
                object obj = ResourceManager.GetObject("_03_LARS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///LASSO 
        ///@author: Mahmoud M. Abderlrahman
        ///varialbles : 
        ///##workingDir##
        ///##logFile##
        ///##resFile##
        ///##dataFile##
        ///##targetFile##
        ///##predictData##
        ///
        ///	support = clf.support_
        ///	supportVector = clf.support_vectors_
        ///	nSupport = clf.n_support_
        ///	dualCoef = clf.dual_coef_
        ///	
        ///&quot;&quot;&quot;
        ///workingDir = &quot;##workingDir##&quot;
        ///logFile = &quot;##logFile##&quot;
        ///resFile = workingDir+&quot;##resFile##&quot;
        ///
        ///
        ///xmlFile = workingDir+&quot;res.xml&quot;
        ///isDump = True
        ///
        ///log_file =open(logFile,  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _03_LASSO {
            get {
                return ResourceManager.GetString("_03_LASSO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_lasso_icon {
            get {
                object obj = ResourceManager.GetObject("_03_lasso_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_lasso1 {
            get {
                object obj = ResourceManager.GetObject("_03_lasso1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///LASSO 
        ///@author: Mahmoud M. Abderlrahman
        ///varialbles : 
        ///##workingDir##
        ///##logFile##
        ///##resFile##
        ///##dataFile##
        ///##targetFile##
        ///##predictData##	
        ///&quot;&quot;&quot;
        ///workingDir = &quot;##workingDir##&quot;
        ///logFile = &quot;##logFile##&quot;
        ///resFile = workingDir+&quot;##resFile##&quot;
        ///
        ///
        ///xmlFile = workingDir+&quot;res.xml&quot;
        ///isDump = True
        ///
        ///log_file =open(logFile, &apos;w&apos;) 
        ///
        ///try:
        ///    from sklearn.linear_model import LassoLars
        ///    import pickle
        ///    import xml.etree.cElementTree as ET
        ///e [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _03_LassoLars {
            get {
                return ResourceManager.GetString("_03_LassoLars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///
        ///@author: gamma
        ///varialbles : 
        ///##workingDir##
        ///##logFile##
        ///##resFile##
        ///##dataFile##
        ///##targetFile##
        ///##predictData##
        ///
        ///	support = clf.support_
        ///	supportVector = clf.support_vectors_
        ///	nSupport = clf.n_support_
        ///	dualCoef = clf.dual_coef_
        ///	
        ///&quot;&quot;&quot;
        ///workingDir = &quot;##workingDir##&quot;
        ///logFile = &quot;##logFile##&quot;
        ///resFile = workingDir+&quot;##resFile##&quot;
        ///
        ///#supportFile = workingDir+&quot;support.txt&quot;
        ///#supportVectorFile = workingDir+&quot;supportvector.txt&quot;
        ///#nSup [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _03_LinearRegression {
            get {
                return ResourceManager.GetString("_03_LinearRegression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///Logistic Regression 
        /// 
        ///@author: Mahmoud M. Abderlrahman &lt;arch.mahmoud.ouf111@gmail.com&gt;
        ///under BSD simplified Licence
        ///[ANT] A machine learning plugin for Rhino\Grasshopper 
        ///    Started by Mahmoud Abdelrahman [Mahmoud Ouf] under BSD License
        ///
        ///    Copyright (c) 2017, Mahmoud AbdelRahman &lt;arch.mahmoud.ouf111@gmail.com&gt;
        ///    All rights reserved.
        ///
        ///    Redistribution and use in source and binary forms, with or without
        ///    modification, are [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _03_LogisticRegression {
            get {
                return ResourceManager.GetString("_03_LogisticRegression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///LASSO 
        ///@author: Mahmoud M. Abderlrahman
        ///varialbles : 
        ///##workingDir##
        ///##logFile##
        ///##resFile##
        ///##dataFile##
        ///##targetFile##
        ///##predictData##	
        ///&quot;&quot;&quot;
        ///workingDir = &quot;##workingDir##&quot;
        ///logFile = &quot;##logFile##&quot;
        ///resFile = workingDir+&quot;##resFile##&quot;
        ///
        ///
        ///xmlFile = workingDir+&quot;res.xml&quot;
        ///isDump = True
        ///
        ///log_file =open(logFile, &apos;w&apos;) 
        ///
        ///try:
        ///    from sklearn.linear_model import OrthogonalMatchingPursuit
        ///    import pickle
        ///    import xml.etree.cElem [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _03_OrthogonalMatchingPursuit {
            get {
                return ResourceManager.GetString("_03_OrthogonalMatchingPursuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _03_SupportVectorClassify {
            get {
                object obj = ResourceManager.GetObject("_03_SupportVectorClassify", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///Logistic Regression 
        /// 
        ///@author: Mahmoud M. Abderlrahman &lt;arch.mahmoud.ouf111@gmail.com&gt;
        ///under BSD simplified Licence
        ///[ANT] A machine learning plugin for Rhino\Grasshopper 
        ///    Started by Mahmoud Abdelrahman [Mahmoud Ouf] under BSD License
        ///
        ///    Copyright (c) 2017, Mahmoud AbdelRahman &lt;arch.mahmoud.ouf111@gmail.com&gt;
        ///    All rights reserved.
        ///
        ///    Redistribution and use in source and binary forms, with or without
        ///    modification, are [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _05_SGDClassifier {
            get {
                return ResourceManager.GetString("_05_SGDClassifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///Logistic Regression 
        /// 
        ///@author: Mahmoud M. Abderlrahman &lt;arch.mahmoud.ouf111@gmail.com&gt;
        ///under BSD simplified Licence
        ///[ANT] A machine learning plugin for Rhino\Grasshopper 
        ///    Started by Mahmoud Abdelrahman [Mahmoud Ouf] under BSD License
        ///
        ///    Copyright (c) 2017, Mahmoud AbdelRahman &lt;arch.mahmoud.ouf111@gmail.com&gt;
        ///    All rights reserved.
        ///
        ///    Redistribution and use in source and binary forms, with or without
        ///    modification, are [rest of string was truncated]&quot;;.
        /// </summary>
        public static string _05_SGDRegressor {
            get {
                return ResourceManager.GetString("_05_SGDRegressor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap boston {
            get {
                object obj = ResourceManager.GetObject("boston", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to directory = &quot;##directory##&quot;
        ///f = open(directory + &quot;bostonDatasetLog.txt&quot;, &apos;w&apos;)
        ///try:
        ///    from sklearn.datasets import load_boston
        ///    f.write(&quot;Boston dataSet successfully loaded \n &quot;)
        ///except Exception(e):
        ///    f.write(str(e) + &quot; \n &quot;)
        ///
        ///def write_data(directory, filename, data):
        ///    newf = open(directory+filename, &apos;w&apos;)
        ///    newf.write(data)
        ///    newf.close()
        ///
        ///import pickle
        ///    
        ///bos = load_boston()
        ///
        ///write_data(directory,&quot;data.txt&quot;, pickle.dumps(bos.data))
        ///write_data(directory, &quot;targets.txt&quot;, pick [rest of string was truncated]&quot;;.
        /// </summary>
        public static string boston_dataset {
            get {
                return ResourceManager.GetString("boston_dataset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap csv_icon {
            get {
                object obj = ResourceManager.GetObject("csv_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to directory = &quot;##directory##&quot;
        ///try:
        ///    import numpy as np
        ///    import matplotlib.pyplot as plt
        ///except:
        ///    pass
        ///
        ///def write_data(directory, filename, data):
        ///    newf = open(directory+filename, &apos;w&apos;)
        ///    newf.write(data)
        ///    newf.close()
        ///
        ///import pickle
        ///    
        ///data = ##data##
        ///target = ##target##
        ///features = ##features##
        ///
        ///write_data(directory,&quot;data.txt&quot;, pickle.dumps(data))
        ///write_data(directory, &quot;targets.txt&quot;, pickle.dumps(target))
        ///write_data(directory, &quot;feature_names.txt&quot;, pickle.dumps(features))        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string csvDataset {
            get {
                return ResourceManager.GetString("csvDataset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap exceldataset {
            get {
                object obj = ResourceManager.GetObject("exceldataset", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to directory = &quot;##directory##&quot;
        ///try:
        ///    import numpy as np
        ///    import matplotlib.pyplot as plt
        ///except:
        ///    pass
        ///
        ///def write_data(directory, filename, data):
        ///    newf = open(directory+filename, &apos;w&apos;)
        ///    newf.write(data)
        ///    newf.close()
        ///
        ///import pickle
        ///    
        ///data = ##data##
        ///target = ##target##
        ///features = ##features##
        ///
        ///write_data(directory,&quot;data.txt&quot;, pickle.dumps(data))
        ///write_data(directory, &quot;targets.txt&quot;, pickle.dumps(target))
        ///write_data(directory, &quot;feature_names.txt&quot;, pickle.dumps(features))        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ExcelDataset1 {
            get {
                return ResourceManager.GetString("ExcelDataset1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon2 {
            get {
                object obj = ResourceManager.GetObject("icon2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to f = open(&quot;C:\\ant\\init\\errorlog.txt&quot;, &apos;w&apos;)
        ///
        ///try:
        ///	import numpy as np
        ///	f.write(&quot;01 - numpy has been initiated as np \n&quot;)
        ///except Exception(e):
        ///	f.write(str(e)+&quot;\n&quot;)
        ///	
        ///try:
        ///	import scipy 
        ///	f.write(&quot;03 - scipy has been initaited\n&quot;)
        ///except:
        ///	f.write(&quot;03 - There has been a problem initiating scipy .. \n&quot;)
        ///
        ///try:
        ///	import sklearn
        ///	f.write(&quot;04 - sklearn has been initiated.. \n&quot;)
        ///except:
        ///	f = open(&quot;C:\\ant\\init\\errorlog.txt&quot;, &apos;w&apos;)
        ///	f.write(&quot;04 - error: sklearn hasn&apos;t been initiated...\n&quot;)
        ///
        ///f. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string init {
            get {
                return ResourceManager.GetString("init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap iris_icon {
            get {
                object obj = ResourceManager.GetObject("iris_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to directory = &quot;##directory##&quot;
        ///f = open(directory+&quot;errorlog.txt&quot;, &apos;w&apos;)
        ///
        ///try:
        ///	from sklearn.datasets import load_iris
        ///except Exception(e):
        ///	f.write(e +&quot;\n&quot;)
        ///
        ///f.close()
        ///f = open(directory + &quot;irislog.txt&quot;, &apos;w&apos;)
        ///
        ///def write_data(directory, filename, data):
        ///    newf = open(directory+filename, &apos;w&apos;)
        ///    newf.write(data)
        ///    newf.close()
        ///
        ///import pickle
        ///    
        ///iris = load_iris()
        ///
        ///write_data(directory,&quot;data.txt&quot;, pickle.dumps(iris.data))
        ///write_data(directory, &quot;targets.txt&quot;, pickle.dumps(iris.target))
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string irisdataset {
            get {
                return ResourceManager.GetString("irisdataset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///
        ///@author: gamma
        ///varialbles : 
        ///##workingDir##
        ///##logFile##
        ///##resFile##
        ///##dataFile##
        ///##targetFile##
        ///##predictData##
        ///
        ///	support = clf.support_
        ///	supportVector = clf.support_vectors_
        ///	nSupport = clf.n_support_
        ///	dualCoef = clf.dual_coef_
        ///	
        ///&quot;&quot;&quot;
        ///workingDir = &quot;##workingDir##&quot;
        ///logFile = &quot;##logFile##&quot;
        ///resFile = workingDir+&quot;##resFile##&quot;
        ///
        ///
        ///xmlFile = workingDir+&quot;res.xml&quot;
        ///isDump = True
        ///
        ///log_file =open(logFile, &apos;w&apos;) 
        ///
        ///try:
        ///    from  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string lars {
            get {
                return ResourceManager.GetString("lars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap LASSO {
            get {
                object obj = ResourceManager.GetObject("LASSO", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap linearreg {
            get {
                object obj = ResourceManager.GetObject("linearreg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap loaddataicon {
            get {
                object obj = ResourceManager.GetObject("loaddataicon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap openFile {
            get {
                object obj = ResourceManager.GetObject("openFile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap scikit_learn_logo {
            get {
                object obj = ResourceManager.GetObject("scikit_learn_logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # -*- coding: utf-8 -*-
        ///&quot;&quot;&quot;
        ///Created on Tue Apr 04 05:14:23 2017
        ///
        ///@author: Mahmoud Abdlerahman 2017
        ///varialbles : 
        ///##workingDir##
        ///##logFile##
        ///##resFile##
        ///##dataFile##
        ///##targetFile##
        ///##predictData##
        ///&quot;&quot;&quot;
        ///workingDir = &quot;##workingDir##&quot;
        ///logFile = &quot;##logFile##&quot;
        ///resFile = workingDir+&quot;##resFile##&quot;
        ///
        ///isDump = ##DumpToggle##
        ///
        ///newfile =open(workingDir+logFile, &apos;w&apos;) 
        ///resultFile = open(workingDir+resFile, &apos;w&apos;)
        ///try:
        ///    from sklearn import svm
        ///    import pickle
        ///except:
        ///    newfile.write(&quot;error loadi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string supportVectorClassifier {
            get {
                return ResourceManager.GetString("supportVectorClassifier", resourceCulture);
            }
        }
    }
}
